@charset "UTF-8";
/**
 * Stylesheet: Main Stylesheet
 *
 */
/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
@import url("//fonts.googleapis.com/css?family=Lato:400,700,900");
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* generated with grunt-sass-globbing */
/**
 * Breakpoint Configuration
 * @see https://github.com/Team-Sass/breakpoint/wiki
 *
 * Usage:
 * display: none; // hidden for mobile
 * @include breakpoint($bp--small-up) {
 *   display: block; // shown above 400
 * }
 */
/**
 *
 * Settings variables
 *
 */
/**
 * Mixin - Icon
 *
 * Icon stack:
 * 1. 00-config/_icons.scss (autogenerated)
 * 2. 10-base/_icons-base.scss (here)
 * 3. 30-global/_icons-application.scss (Generate default classes)
 */
/*
 * Main Icon mixin
 *
 * Can be called like @include icon($vars) { background: something; } using the
 * power of @content.
 */
.header {
  position: relative;
  border-bottom: solid 1px #68696d;
}

@media (min-width: 640px) {
  .header .search-form {
    position: absolute;
    top: 20px;
    right: 20px;
  }
}

body {
  font-family: "Lato", sans-serif;
}

h1 {
  font-family: "Lato", sans-serif;
}

blockquote {
  font-style: italic;
  border-left: solid 3px #68696d;
  margin-left: 20px;
  padding-left: 20px;
}

img {
  max-width: 100%;
  height: auto;
}

/**
 * Font application to generic DOM
 */
@font-face {
  font-family: icons;
  src: url("../images/icons/output/fonts/icons.eot");
  src: url("../images/icons/output/fonts/icons.eot?#iefix") format("embedded-opentype"), url("../images/icons/output/fonts/icons.woff") format("woff"), url("../images/icons/output/fonts/icons.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

[class*="icon--"] {
  font-family: icons;
  display: inline-block;
  vertical-align: middle;
  line-height: 1;
  font-weight: normal;
  font-style: normal;
  speak: none;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon--facebook:before {
  content: "";
}

.icon--linkedin:before {
  content: "";
}

.icon--mail:before {
  content: "";
}

.icon--play:before {
  content: "";
}

.icon--print:before {
  content: "";
}

.icon--rss:before {
  content: "";
}

.icon--search:before {
  content: "";
}

.icon--twitter:before {
  content: "";
}

.icon--youtube:before {
  content: "";
}

.views-row {
  clear: both;
}

.btn {
  background: #0B81C9;
  padding: 5px 10px;
  display: inline-block;
  color: #f0f0f0;
  text-decoration: none;
}

.btn--alt {
  background: #0B81C9;
  padding: 5px 10px;
  display: inline-block;
  color: #f0f0f0;
  text-decoration: none;
  background: #f0f0f0;
  color: #0B81C9;
}

input[type="submit"],
.form-submit {
  background: #0B81C9;
  padding: 5px 10px;
  display: inline-block;
  color: #f0f0f0;
  text-decoration: none;
  border: 0;
}

/**
 * A demo block to show BEM in action
 *
 */
.demo-block {
  width: 25%;
}

.demo-block--large {
  width: 100%;
}

.demo-block__title {
  font-size: 16px;
}

.demo-block__thumbnail {
  height: 60px;
  width: 60px;
}

.menu {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.node-teaser {
  margin-bottom: 20px;
}

@media (min-width: 480px) {
  .node-teaser .field-type-image {
    float: left;
    width: 33%;
    margin-right: 20px;
  }
}

.primary-nav {
  padding: 10px 0;
}

.primary-nav > .menu::after {
  clear: both;
  content: "";
  display: table;
}

.primary-nav > .menu ul {
  margin-left: 20px;
}

@media (min-width: 640px) {
  .primary-nav > .menu > li {
    float: left;
    margin-left: 10px;
  }
  .primary-nav > .menu > li:first-child {
    margin-left: 0;
  }
  .primary-nav > .menu > li ul {
    display: none;
  }
}

.search-form fieldset {
  border: none;
}

@media (min-width: 480px) {
  .g-2up .gi:nth-child(2n+1) {
    width: 50%;
    float: left;
    margin-right: -100%;
    margin-left: 0;
    clear: none;
    clear: both;
  }
  .g-2up .gi:nth-child(2n+2) {
    width: 50%;
    float: right;
    margin-left: 0;
    margin-right: 0;
    clear: none;
  }
}

@media (min-width: 480px) {
  .g-3up .gi:nth-child(3n+1) {
    width: 33.3333333333%;
    float: left;
    margin-right: -100%;
    margin-left: 0;
    clear: none;
    clear: both;
  }
  .g-3up .gi:nth-child(3n+2) {
    width: 33.3333333333%;
    float: left;
    margin-right: -100%;
    margin-left: 33.3333333333%;
    clear: none;
  }
  .g-3up .gi:nth-child(3n+3) {
    width: 33.3333333333%;
    float: right;
    margin-left: 0;
    margin-right: 0;
    clear: none;
  }
}

@media (min-width: 480px) {
  .g-4up .gi:nth-child(4n+1) {
    width: 25%;
    float: left;
    margin-right: -100%;
    margin-left: 0;
    clear: none;
    clear: both;
  }
  .g-4up .gi:nth-child(4n+2) {
    width: 25%;
    float: left;
    margin-right: -100%;
    margin-left: 25%;
    clear: none;
  }
  .g-4up .gi:nth-child(4n+3) {
    width: 25%;
    float: left;
    margin-right: -100%;
    margin-left: 50%;
    clear: none;
  }
  .g-4up .gi:nth-child(4n+4) {
    width: 25%;
    float: right;
    margin-left: 0;
    margin-right: 0;
    clear: none;
  }
}

/*------------------------------------*    $PATTERN LAB-SPECIFIC STYLES
\*------------------------------------*/
/**
 * This stylesheet is for styles you want to include only when the interface is being viewed within Pattern Lab.
 * This is helpful for displaying demo styles for grids, animations, color swatches, etc
 * It's also helpful for overriding context-specific styles like fixed or absolutely positioned elements
 * These styles will not be your production CSS.
 */
pre {
  margin-top: 0;
}

.sg-colors {
  overflow: hidden;
  margin: 5px;
  padding: 0;
}

.sg-colors > li {
  overflow: hidden;
  border: 1px solid #ccc;
  padding: 0.3em;
  margin: 0 0 10px;
  box-sizing: border-box;
  font-size: 12px;
}

.sg-colors > li .sg-swatch {
  display: block;
  height: 25px;
  outline: dotted 1px gray;
}

.sg-colors > li .sg-info {
  line-height: 1;
}

@media all and (min-width: 400px) {
  .sg-colors > li {
    float: left;
    width: 49%;
    margin-right: 1%;
  }
}

@media all and (min-width: 700px) {
  .sg-colors > li {
    width: 24%;
  }
  .sg-colors > li:nth-child(4n+1) {
    clear: both;
  }
}

.sg-breakpoints ul {
  margin: 0;
  padding: 0;
}

.sg-breakpoints li {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.sg-breakpoints .breakpoints > li {
  position: absolute;
  border-left: solid 3px #595959;
  height: 100%;
}

.sg-breakpoints .breakpoints > li > .label {
  display: block;
  background: #595959;
  padding: 3px;
  color: white;
}

.sg-breakpoints .breakpoints > li:hover {
  border-left-color: rgba(89, 89, 89, 0.3);
}

.sg-breakpoints .breakpoints > li:hover > .label {
  opacity: 0;
}

.sg-breakpoints .device_widths {
  padding-top: 20px;
}

.sg-breakpoints .device_widths > li {
  border-bottom: solid 3px #cccccc;
  text-align: right;
  margin-bottom: 15px;
  padding-right: 15px;
  border-right: solid 3px #cccccc;
}

.sg-font-sizes thead {
  font-weight: bold;
  text-transform: uppercase;
  border-bottom: 2px solid black;
}

.sg-font-sizes th,
.sg-font-sizes td {
  text-align: left;
  white-space: nowrap;
  line-height: 1.5em;
}

.sg-font-sizes th:first-child,
.sg-font-sizes td:first-child {
  padding-right: 12px;
}

.demo__block {
  height: 200px;
  background-color: rgba(104, 105, 109, 0.5);
}

.icons-container {
  max-width: 1140px;
  margin: 0 auto;
  padding: 25px;
}

.icons-demo {
  margin-bottom: 40px;
}

@media all and (min-width: 600px) {
  .icons-demo {
    -webkit-column-count: 3;
       -moz-column-count: 3;
            column-count: 3;
    -webkit-column-gap: 20px;
       -moz-column-gap: 20px;
            column-gap: 20px;
  }
}

@media all and (min-width: 800px) {
  .icons-demo {
    -webkit-column-count: 5;
       -moz-column-count: 5;
            column-count: 5;
  }
}

.icons__item,
.icons__item i {
  line-height: 2em;
  cursor: pointer;
  overflow: hidden;
}

.icons__item:hover {
  color: #3c90be;
}

.icons__item i {
  display: inline-block;
  width: 32px;
  text-align: center;
}

.icons__item i:hover i {
  -webkit-transform: scale(1.5);
      -ms-transform: scale(1.5);
          transform: scale(1.5);
}

.icons-demo__footer {
  margin-top: 40px;
  font-size: 14px;
  color: #999;
}

.demo-random-icon:before {
  font-family: icons;
  display: inline-block;
  vertical-align: middle;
  line-height: 1;
  font-weight: normal;
  font-style: normal;
  speak: none;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "";
  font-size: inherit;
  color: inherit;
}

.demo-text-replace-icon {
  position: relative;
  right: 9999px;
  height: 16px;
  width: 16px;
}

.demo-text-replace-icon:before {
  font-family: icons;
  display: inline-block;
  vertical-align: middle;
  line-height: 1;
  font-weight: normal;
  font-style: normal;
  speak: none;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  content: "";
  font-size: inherit;
  color: inherit;
}

.demo-text-replace-icon:before {
  position: absolute;
  height: 100%;
  text-align: center;
  top: 0;
  right: -9999px;
}

.demo .g .gi {
  text-align: center;
  outline: dotted 1px #ccc;
}
/*# sourceMappingURL=data:application/json;base64, */